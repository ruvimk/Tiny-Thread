; Disassembly of file: test2.obj
; Fri Nov  9 13:29:28 2018
; Mode: 32 bits
; Syntax: YASM/NASM
; Instruction set: 80386

; Error: symbol names contain illegal characters,
; 1 Symbol names not changed


global _tt_get_tick_count: function
global ___tt_just_hang: function
global _tt_init: function
global ___tt_restore_and_return
global _tt_prepare_stack: function
global _tt_debug
global _tt_add_thread: function
global _tt_remove_thread: function
global ___tt_find_next_thread: function
global ___tt_task_switch: function
global _tt_yield: function
global _tt_sleep_ticks: function
global _tt_sleep_us
global _tt_sleep_ms
global _tt_sleep_until
global _tt_get_current_thread: function
global _tt_suspend_thread: function
global _tt_wake_thread: function
global _tt_suspend_me: function
global _tt_suspend_until_threads_change: function
global _tt_suspend_me_until_threads_change: function
global _tt_mutex_lock: function
global _tt_mutex_unlock: function
global _tt_wait_for_all_finish: function
global _tt_exit_thread
global _test1
global _test2
global _test3
global _test4
global _test5
global _test6
global _main
global ?_079                                            ; Note: Communal.
global ?_080                                            ; Note: Communal.
global @                                               ; Note: Communal.
global ?_081                                            ; Note: Communal.
global ?_082                                            ; Note: Communal.
global ?_083                                            ; Note: Communal.
global ?_084                                            ; Note: Communal.
global ?_085                                            ; Note: Communal.
global ?_086                                            ; Note: Communal.
global ?_087                                            ; Note: Communal.

extern _printf                                          ; dword
extern __imp__GetTickCount@0                            ; dword
extern __imp__Sleep@4                                   ; dword
extern __acrtused_con                                   ; near

FLAT    GROUP 


SECTION .TEXT   align=4 execute                         ; section number 1, code

_tt_get_tick_count:; Function begin
        call    near [__acrtused_con]                   ; 0000 _ FF. 15, 00000000(segrel)
        ret                                             ; 0006 _ C3
; _tt_get_tick_count End of function

___tt_just_hang:; Function begin
        push    50                                      ; 0007 _ 6A, 32
        call    near [__acrtused_con]                   ; 0009 _ FF. 15, 00000000(segrel)
        call    _tt_yield                               ; 000F _ E8, 000003F2
        jmp     ___tt_just_hang                         ; 0014 _ EB, F1
; ___tt_just_hang End of function

_tt_init:; Function begin
        mov     dword [__imp__GetTickCount@0+4H], 128   ; 0016 _ C7. 05, 00000004(segrel), 00000080
        mov     eax, FLAT:__imp__GetTickCount@0         ; 0020 _ B8, 00000000(segrel)
        mov     dword [__imp__Sleep@4], eax             ; 0025 _ A3, 00000000(segrel)
        mov     dword [__acrtused_con], eax             ; 002A _ A3, 00000000(segrel)
        push    FLAT:___tt_just_hang                    ; 002F _ 68, 00000007(segrel)
        push    4160                                    ; 0034 _ 68, 00001040
        push    FLAT:__acrtused_con                     ; 0039 _ 68, 00000000(segrel)
        call    _tt_prepare_stack                       ; 003E _ E8, 00000034
        mov     dword [_printf], eax                    ; 0043 _ A3, 00000000(segrel)
        mov     dword [_printf+4H], 255                 ; 0048 _ C7. 05, 00000004(segrel), 000000FF
        mov     dword [_printf+8H], 0                   ; 0052 _ C7. 05, 00000008(segrel), 00000000
        mov     dword [_printf+10H], 0                  ; 005C _ C7. 05, 00000010(segrel), 00000000
        push    FLAT:_printf                            ; 0066 _ 68, 00000000(segrel)
        call    _tt_add_thread                          ; 006B _ E8, 000000E3
        add     esp, 16                                 ; 0070 _ 83. C4, 10
        ret                                             ; 0073 _ C3
; _tt_init End of function

___tt_restore_and_return:; Function begin
        popad                                           ; 0074 _ 61
        popfd                                           ; 0075 _ 9D
        ret                                             ; 0076 _ C3
; ___tt_restore_and_return End of function

_tt_prepare_stack:; Function begin
        enter   16, 0                                   ; 0077 _ C8, 0010, 00
        push    ebx                                     ; 007B _ 53
        push    esi                                     ; 007C _ 56
        mov     eax, dword [ebp+8H]                     ; 007D _ 8B. 45, 08
        mov     dword [ebp-10H], eax                    ; 0080 _ 89. 45, F0
        mov     ecx, dword [ebp+0CH]                    ; 0083 _ 8B. 4D, 0C
        shr     ecx, 2                                  ; 0086 _ C1. E9, 02
        mov     dword [ebp-0CH], ecx                    ; 0089 _ 89. 4D, F4
        mov     edx, FLAT:_tt_exit_thread               ; 008C _ BA, 000005BC(segrel)
        dec     dword [ebp-0CH]                         ; 0091 _ FF. 4D, F4
        mov     ebx, dword [ebp-0CH]                    ; 0094 _ 8B. 5D, F4
        mov     dword [eax+ebx*4], edx                  ; 0097 _ 89. 14 98
        mov     esi, dword [ebp+10H]                    ; 009A _ 8B. 75, 10
        dec     dword [ebp-0CH]                         ; 009D _ FF. 4D, F4
        mov     eax, dword [ebp-0CH]                    ; 00A0 _ 8B. 45, F4
        mov     ecx, dword [ebp-10H]                    ; 00A3 _ 8B. 4D, F0
        mov     dword [ecx+eax*4], esi                  ; 00A6 _ 89. 34 81
        pushfd                                          ; 00A9 _ 9C
        pop     dword [ebp-8H]                          ; 00AA _ 8F. 45, F8
        mov     edx, dword [ebp-8H]                     ; 00AD _ 8B. 55, F8
        dec     dword [ebp-0CH]                         ; 00B0 _ FF. 4D, F4
        mov     ebx, dword [ebp-0CH]                    ; 00B3 _ 8B. 5D, F4
        mov     esi, dword [ebp-10H]                    ; 00B6 _ 8B. 75, F0
        mov     dword [esi+ebx*4], edx                  ; 00B9 _ 89. 14 9E
        mov     dword [ebp-4H], 0                       ; 00BC _ C7. 45, FC, 00000000
?_001:  cmp     dword [ebp-4H], 8                       ; 00C3 _ 83. 7D, FC, 08
        jnc     ?_002                                   ; 00C7 _ 73, 15
        dec     dword [ebp-0CH]                         ; 00C9 _ FF. 4D, F4
        mov     eax, dword [ebp-0CH]                    ; 00CC _ 8B. 45, F4
        mov     ecx, dword [ebp-10H]                    ; 00CF _ 8B. 4D, F0
        mov     dword [ecx+eax*4], 0                    ; 00D2 _ C7. 04 81, 00000000
        inc     dword [ebp-4H]                          ; 00D9 _ FF. 45, FC
        jmp     ?_001                                   ; 00DC _ EB, E5
; _tt_prepare_stack End of function

?_002:  ; Local function
        mov     edx, FLAT:___tt_restore_and_return      ; 00DE _ BA, 00000074(segrel)
        dec     dword [ebp-0CH]                         ; 00E3 _ FF. 4D, F4
        mov     ebx, dword [ebp-0CH]                    ; 00E6 _ 8B. 5D, F4
        mov     esi, dword [ebp-10H]                    ; 00E9 _ 8B. 75, F0
        mov     dword [esi+ebx*4], edx                  ; 00EC _ 89. 14 9E
        mov     eax, dword [ebp-0CH]                    ; 00EF _ 8B. 45, F4
        mov     ecx, dword [ebp-10H]                    ; 00F2 _ 8B. 4D, F0
        lea     eax, [ecx+eax*4]                        ; 00F5 _ 8D. 04 81
        pop     esi                                     ; 00F8 _ 5E
        pop     ebx                                     ; 00F9 _ 5B
        leave                                           ; 00FA _ C9
        ret                                             ; 00FB _ C3

_tt_debug:; Function begin
        enter   4, 0                                    ; 00FC _ C8, 0004, 00
        push    ebx                                     ; 0100 _ 53
        mov     eax, dword [__acrtused_con]             ; 0101 _ A1, 00000000(segrel)
        mov     dword [ebp-4H], eax                     ; 0106 _ 89. 45, FC
        call    _tt_get_tick_count                      ; 0109 _ E8, FFFFFEF2
        push    eax                                     ; 010E _ 50
        push    FLAT:?_063                              ; 010F _ 68, 00000008(segrel)
        call    __acrtused_con                          ; 0114 _ E8, 00000000(rel)
        add     esp, 8                                  ; 0119 _ 83. C4, 08
?_003:  cmp     dword [ebp-4H], 0                       ; 011C _ 83. 7D, FC, 00
        jz      ?_004                                   ; 0120 _ 74, 21
        mov     ecx, dword [ebp-4H]                     ; 0122 _ 8B. 4D, FC
        push    dword [ecx+8H]                          ; 0125 _ FF. 71, 08
        push    dword [ecx+4H]                          ; 0128 _ FF. 71, 04
        push    FLAT:?_064                              ; 012B _ 68, 0000001C(segrel)
        call    __acrtused_con                          ; 0130 _ E8, 00000000(rel)
        mov     edx, dword [ebp-4H]                     ; 0135 _ 8B. 55, FC
        mov     ebx, dword [edx+10H]                    ; 0138 _ 8B. 5A, 10
        mov     dword [ebp-4H], ebx                     ; 013B _ 89. 5D, FC
        add     esp, 12                                 ; 013E _ 83. C4, 0C
        jmp     ?_003                                   ; 0141 _ EB, D9
; _tt_debug End of function

?_004:  ; Local function
        push    FLAT:?_065                              ; 0143 _ 68, 00000040(segrel)
        call    __acrtused_con                          ; 0148 _ E8, 00000000(rel)
        add     esp, 4                                  ; 014D _ 83. C4, 04
        pop     ebx                                     ; 0150 _ 5B
        leave                                           ; 0151 _ C9
        ret                                             ; 0152 _ C3

_tt_add_thread:; Function begin
        enter   8, 0                                    ; 0153 _ C8, 0008, 00
        push    ebx                                     ; 0157 _ 53
        push    esi                                     ; 0158 _ 56
        mov     eax, dword [__acrtused_con]             ; 0159 _ A1, 00000000(segrel)
        mov     dword [ebp-8H], eax                     ; 015E _ 89. 45, F8
        mov     ecx, dword [ebp+8H]                     ; 0161 _ 8B. 4D, 08
        mov     edx, dword [ecx+4H]                     ; 0164 _ 8B. 51, 04
        mov     dword [ebp-4H], edx                     ; 0167 _ 89. 55, FC
        mov     ebx, dword [eax+4H]                     ; 016A _ 8B. 58, 04
        cmp     ebx, edx                                ; 016D _ 3B. DA
        jc      ?_005                                   ; 016F _ 72, 16
        mov     esi, dword [ebp+8H]                     ; 0171 _ 8B. 75, 08
        mov     dword [__acrtused_con], esi             ; 0174 _ 89. 35, 00000000(segrel)
        mov     eax, dword [ebp-8H]                     ; 017A _ 8B. 45, F8
        mov     ecx, dword [ebp+8H]                     ; 017D _ 8B. 4D, 08
        mov     dword [ecx+10H], eax                    ; 0180 _ 89. 41, 10
        pop     esi                                     ; 0183 _ 5E
        pop     ebx                                     ; 0184 _ 5B
        leave                                           ; 0185 _ C9
        ret                                             ; 0186 _ C3
; _tt_add_thread End of function

?_005:  ; Local function
        mov     edx, dword [ebp-8H]                     ; 0187 _ 8B. 55, F8
        add     edx, 16                                 ; 018A _ 83. C2, 10
        cmp     dword [edx], 0                          ; 018D _ 83. 3A, 00
        jz      ?_006                                   ; 0190 _ 74, 15
        mov     ebx, dword [edx]                        ; 0192 _ 8B. 1A
        mov     esi, dword [ebx+4H]                     ; 0194 _ 8B. 73, 04
        cmp     esi, dword [ebp-4H]                     ; 0197 _ 3B. 75, FC
        jnc     ?_006                                   ; 019A _ 73, 0B
        mov     eax, dword [ebp-8H]                     ; 019C _ 8B. 45, F8
        mov     ecx, dword [eax+10H]                    ; 019F _ 8B. 48, 10
        mov     dword [ebp-8H], ecx                     ; 01A2 _ 89. 4D, F8
        jmp     ?_005                                   ; 01A5 _ EB, E0

?_006:  ; Local function
        mov     edx, dword [ebp-8H]                     ; 01A7 _ 8B. 55, F8
        add     edx, 16                                 ; 01AA _ 83. C2, 10
        cmp     dword [edx], 0                          ; 01AD _ 83. 3A, 00
        jnz     ?_007                                   ; 01B0 _ 75, 11
        mov     ebx, dword [ebp+8H]                     ; 01B2 _ 8B. 5D, 08
        mov     dword [ebx+10H], 0                      ; 01B5 _ C7. 43, 10, 00000000
        mov     esi, dword [ebp+8H]                     ; 01BC _ 8B. 75, 08
        mov     dword [edx], esi                        ; 01BF _ 89. 32
        jmp     ?_008                                   ; 01C1 _ EB, 13

?_007:  mov     eax, dword [ebp-8H]                     ; 01C3 _ 8B. 45, F8
        add     eax, 16                                 ; 01C6 _ 83. C0, 10
        mov     ecx, dword [eax]                        ; 01C9 _ 8B. 08
        mov     edx, dword [ebp+8H]                     ; 01CB _ 8B. 55, 08
        mov     dword [edx+10H], ecx                    ; 01CE _ 89. 4A, 10
        mov     ebx, dword [ebp+8H]                     ; 01D1 _ 8B. 5D, 08
        mov     dword [eax], ebx                        ; 01D4 _ 89. 18
?_008:  pop     esi                                     ; 01D6 _ 5E
        pop     ebx                                     ; 01D7 _ 5B
        leave                                           ; 01D8 _ C9
        ret                                             ; 01D9 _ C3

_tt_remove_thread:; Function begin
        enter   4, 0                                    ; 01DA _ C8, 0004, 00
        push    ebx                                     ; 01DE _ 53
        push    esi                                     ; 01DF _ 56
        mov     eax, dword [__acrtused_con]             ; 01E0 _ A1, 00000000(segrel)
        mov     dword [ebp-4H], eax                     ; 01E5 _ 89. 45, FC
        cmp     eax, dword [ebp+8H]                     ; 01E8 _ 3B. 45, 08
        jnz     ?_009                                   ; 01EB _ 75, 15
        mov     ecx, dword [ebp-4H]                     ; 01ED _ 8B. 4D, FC
        mov     edx, dword [ecx+10H]                    ; 01F0 _ 8B. 51, 10
        mov     dword [__acrtused_con], edx             ; 01F3 _ 89. 15, 00000000(segrel)
        mov     ebx, dword [__acrtused_con]             ; 01F9 _ 8B. 1D, 00000000(segrel)
        mov     dword [ebp-4H], ebx                     ; 01FF _ 89. 5D, FC
?_009:  cmp     dword [ebp-4H], 0                       ; 0202 _ 83. 7D, FC, 00
        jz      ?_012                                   ; 0206 _ 74, 35
        mov     esi, dword [ebp-4H]                     ; 0208 _ 8B. 75, FC
        mov     eax, dword [esi+10H]                    ; 020B _ 8B. 46, 10
        cmp     eax, dword [ebp+8H]                     ; 020E _ 3B. 45, 08
        jnz     ?_010                                   ; 0211 _ 75, 0C
        mov     ecx, dword [ebp+8H]                     ; 0213 _ 8B. 4D, 08
        mov     edx, dword [ecx+10H]                    ; 0216 _ 8B. 51, 10
        mov     ebx, dword [ebp-4H]                     ; 0219 _ 8B. 5D, FC
        mov     dword [ebx+10H], edx                    ; 021C _ 89. 53, 10
?_010:  mov     esi, dword [ebp-4H]                     ; 021F _ 8B. 75, FC
        cmp     dword [esi+8H], -2                      ; 0222 _ 83. 7E, 08, FE
        jnz     ?_011                                   ; 0226 _ 75, 0A
        mov     eax, dword [ebp-4H]                     ; 0228 _ 8B. 45, FC
        mov     dword [eax+8H], 0                       ; 022B _ C7. 40, 08, 00000000
?_011:  mov     ecx, dword [ebp-4H]                     ; 0232 _ 8B. 4D, FC
        mov     edx, dword [ecx+10H]                    ; 0235 _ 8B. 51, 10
        mov     dword [ebp-4H], edx                     ; 0238 _ 89. 55, FC
        jmp     ?_009                                   ; 023B _ EB, C5
; _tt_remove_thread End of function

?_012:  ; Local function
        pop     esi                                     ; 023D _ 5E
        pop     ebx                                     ; 023E _ 5B
        leave                                           ; 023F _ C9
        ret                                             ; 0240 _ C3

___tt_find_next_thread:; Function begin
        enter   28, 0                                   ; 0241 _ C8, 001C, 00
        push    ebx                                     ; 0245 _ 53
        push    esi                                     ; 0246 _ 56
        mov     eax, dword [__acrtused_con]             ; 0247 _ A1, 00000000(segrel)
        mov     dword [ebp-1CH], eax                    ; 024C _ 89. 45, E4
        call    _tt_get_tick_count                      ; 024F _ E8, FFFFFDAC
        mov     dword [ebp-18H], eax                    ; 0254 _ 89. 45, E8
?_013:  cmp     dword [ebp-1CH], 0                      ; 0257 _ 83. 7D, E4, 00
        je      ?_032                                   ; 025B _ 0F 84, 00000184
        mov     ecx, dword [ebp-1CH]                    ; 0261 _ 8B. 4D, E4
        mov     edx, dword [ecx+4H]                     ; 0264 _ 8B. 51, 04
        mov     ebx, dword [__imp__Sleep@4]             ; 0267 _ 8B. 1D, 00000000(segrel)
        cmp     edx, dword [ebx+4H]                     ; 026D _ 3B. 53, 04
        jne     ?_028                                   ; 0270 _ 0F 85, 00000127
        mov     esi, dword [ebp-1CH]                    ; 0276 _ 8B. 75, E4
        mov     dword [ebp-14H], esi                    ; 0279 _ 89. 75, EC
        mov     eax, dword [__imp__Sleep@4]             ; 027C _ A1, 00000000(segrel)
        mov     ecx, dword [eax+10H]                    ; 0281 _ 8B. 48, 10
        mov     dword [ebp-0CH], ecx                    ; 0284 _ 89. 4D, F4
        mov     dword [ebp-8H], 0                       ; 0287 _ C7. 45, F8, 00000000
?_014:  cmp     dword [ebp-0CH], 0                      ; 028E _ 83. 7D, F4, 00
        jz      ?_018                                   ; 0292 _ 74, 56
        mov     edx, dword [ebp-0CH]                    ; 0294 _ 8B. 55, F4
        mov     ebx, dword [edx+4H]                     ; 0297 _ 8B. 5A, 04
        mov     esi, dword [__imp__Sleep@4]             ; 029A _ 8B. 35, 00000000(segrel)
        cmp     ebx, dword [esi+4H]                     ; 02A0 _ 3B. 5E, 04
        jnz     ?_018                                   ; 02A3 _ 75, 45
        mov     eax, dword [ebp-0CH]                    ; 02A5 _ 8B. 45, F4
        mov     ecx, dword [eax+8H]                     ; 02A8 _ 8B. 48, 08
        cmp     dword [ebp-18H], ecx                    ; 02AB _ 39. 4D, E8
        jc      ?_017                                   ; 02AE _ 72, 2F
        mov     edx, dword [ebp-0CH]                    ; 02B0 _ 8B. 55, F4
        mov     dword [ebp-8H], edx                     ; 02B3 _ 89. 55, F8
?_015:  cmp     dword [ebp-8H], 0                       ; 02B6 _ 83. 7D, F8, 00
        jz      ?_016                                   ; 02BA _ 74, 16
        mov     ebx, dword [ebp-8H]                     ; 02BC _ 8B. 5D, F8
        cmp     dword [ebx+0CH], 0                      ; 02BF _ 83. 7B, 0C, 00
        jz      ?_016                                   ; 02C3 _ 74, 0D
        mov     esi, dword [ebp-8H]                     ; 02C5 _ 8B. 75, F8
        mov     eax, dword [esi+0CH]                    ; 02C8 _ 8B. 46, 0C
        mov     ecx, dword [eax]                        ; 02CB _ 8B. 08
        mov     dword [ebp-8H], ecx                     ; 02CD _ 89. 4D, F8
        jmp     ?_015                                   ; 02D0 _ EB, E4

?_016:  cmp     dword [ebp-8H], 0                       ; 02D2 _ 83. 7D, F8, 00
        jz      ?_017                                   ; 02D6 _ 74, 07
        mov     eax, dword [ebp-8H]                     ; 02D8 _ 8B. 45, F8
        pop     esi                                     ; 02DB _ 5E
        pop     ebx                                     ; 02DC _ 5B
        leave                                           ; 02DD _ C9
        ret                                             ; 02DE _ C3

?_017:  mov     edx, dword [ebp-0CH]                    ; 02DF _ 8B. 55, F4
        mov     ebx, dword [edx+10H]                    ; 02E2 _ 8B. 5A, 10
        mov     dword [ebp-0CH], ebx                    ; 02E5 _ 89. 5D, F4
        jmp     ?_014                                   ; 02E8 _ EB, A4

?_018:  mov     esi, dword [ebp-0CH]                    ; 02EA _ 8B. 75, F4
        mov     dword [ebp-10H], esi                    ; 02ED _ 89. 75, F0
        mov     ecx, dword [ebp-14H]                    ; 02F0 _ 8B. 4D, EC
        mov     dword [ebp-0CH], ecx                    ; 02F3 _ 89. 4D, F4
?_019:  mov     eax, dword [ebp-0CH]                    ; 02F6 _ 8B. 45, F4
        mov     edx, dword [eax+8H]                     ; 02F9 _ 8B. 50, 08
        cmp     dword [ebp-18H], edx                    ; 02FC _ 39. 55, E8
        jc      ?_022                                   ; 02FF _ 72, 2F
        mov     ebx, dword [ebp-0CH]                    ; 0301 _ 8B. 5D, F4
        mov     dword [ebp-8H], ebx                     ; 0304 _ 89. 5D, F8
?_020:  cmp     dword [ebp-8H], 0                       ; 0307 _ 83. 7D, F8, 00
        jz      ?_021                                   ; 030B _ 74, 16
        mov     esi, dword [ebp-8H]                     ; 030D _ 8B. 75, F8
        cmp     dword [esi+0CH], 0                      ; 0310 _ 83. 7E, 0C, 00
        jz      ?_021                                   ; 0314 _ 74, 0D
        mov     ecx, dword [ebp-8H]                     ; 0316 _ 8B. 4D, F8
        mov     eax, dword [ecx+0CH]                    ; 0319 _ 8B. 41, 0C
        mov     edx, dword [eax]                        ; 031C _ 8B. 10
        mov     dword [ebp-8H], edx                     ; 031E _ 89. 55, F8
        jmp     ?_020                                   ; 0321 _ EB, E4

?_021:  cmp     dword [ebp-8H], 0                       ; 0323 _ 83. 7D, F8, 00
        jz      ?_022                                   ; 0327 _ 74, 07
        mov     eax, dword [ebp-8H]                     ; 0329 _ 8B. 45, F8
        pop     esi                                     ; 032C _ 5E
        pop     ebx                                     ; 032D _ 5B
        leave                                           ; 032E _ C9
        ret                                             ; 032F _ C3

?_022:  mov     ebx, dword [ebp-0CH]                    ; 0330 _ 8B. 5D, F4
        cmp     ebx, dword [__imp__Sleep@4]             ; 0333 _ 3B. 1D, 00000000(segrel)
        jz      ?_023                                   ; 0339 _ 74, 0D
        mov     ecx, dword [ebp-0CH]                    ; 033B _ 8B. 4D, F4
        mov     esi, dword [ecx+10H]                    ; 033E _ 8B. 71, 10
        mov     dword [ebp-0CH], esi                    ; 0341 _ 89. 75, F4
        test    esi, esi                                ; 0344 _ 85. F6
        jnz     ?_019                                   ; 0346 _ 75, AE
?_023:  mov     edx, dword [ebp-10H]                    ; 0348 _ 8B. 55, F0
        mov     dword [ebp-0CH], edx                    ; 034B _ 89. 55, F4
?_024:  cmp     dword [ebp-0CH], 0                      ; 034E _ 83. 7D, F4, 00
        je      ?_032                                   ; 0352 _ 0F 84, 0000008D
        mov     eax, dword [ebp-0CH]                    ; 0358 _ 8B. 45, F4
        mov     ebx, dword [eax+8H]                     ; 035B _ 8B. 58, 08
        cmp     dword [ebp-18H], ebx                    ; 035E _ 39. 5D, E8
        jc      ?_027                                   ; 0361 _ 72, 2F
        mov     ecx, dword [ebp-0CH]                    ; 0363 _ 8B. 4D, F4
        mov     dword [ebp-8H], ecx                     ; 0366 _ 89. 4D, F8
?_025:  cmp     dword [ebp-8H], 0                       ; 0369 _ 83. 7D, F8, 00
        jz      ?_026                                   ; 036D _ 74, 16
        mov     esi, dword [ebp-8H]                     ; 036F _ 8B. 75, F8
        cmp     dword [esi+0CH], 0                      ; 0372 _ 83. 7E, 0C, 00
        jz      ?_026                                   ; 0376 _ 74, 0D
        mov     edx, dword [ebp-8H]                     ; 0378 _ 8B. 55, F8
        mov     eax, dword [edx+0CH]                    ; 037B _ 8B. 42, 0C
        mov     ebx, dword [eax]                        ; 037E _ 8B. 18
        mov     dword [ebp-8H], ebx                     ; 0380 _ 89. 5D, F8
        jmp     ?_025                                   ; 0383 _ EB, E4

?_026:  cmp     dword [ebp-8H], 0                       ; 0385 _ 83. 7D, F8, 00
        jz      ?_027                                   ; 0389 _ 74, 07
        mov     eax, dword [ebp-8H]                     ; 038B _ 8B. 45, F8
        pop     esi                                     ; 038E _ 5E
        pop     ebx                                     ; 038F _ 5B
        leave                                           ; 0390 _ C9
        ret                                             ; 0391 _ C3

?_027:  mov     ecx, dword [ebp-0CH]                    ; 0392 _ 8B. 4D, F4
        mov     edx, dword [ecx+10H]                    ; 0395 _ 8B. 51, 10
        mov     dword [ebp-0CH], edx                    ; 0398 _ 89. 55, F4
        jmp     ?_024                                   ; 039B _ EB, B1

?_028:  mov     esi, dword [ebp-1CH]                    ; 039D _ 8B. 75, E4
        mov     ebx, dword [esi+8H]                     ; 03A0 _ 8B. 5E, 08
        cmp     dword [ebp-18H], ebx                    ; 03A3 _ 39. 5D, E8
        jc      ?_031                                   ; 03A6 _ 72, 2F
        mov     eax, dword [ebp-1CH]                    ; 03A8 _ 8B. 45, E4
        mov     dword [ebp-4H], eax                     ; 03AB _ 89. 45, FC
?_029:  cmp     dword [ebp-4H], 0                       ; 03AE _ 83. 7D, FC, 00
        jz      ?_030                                   ; 03B2 _ 74, 16
        mov     ecx, dword [ebp-4H]                     ; 03B4 _ 8B. 4D, FC
        cmp     dword [ecx+0CH], 0                      ; 03B7 _ 83. 79, 0C, 00
        jz      ?_030                                   ; 03BB _ 74, 0D
        mov     edx, dword [ebp-4H]                     ; 03BD _ 8B. 55, FC
        mov     esi, dword [edx+0CH]                    ; 03C0 _ 8B. 72, 0C
        mov     ebx, dword [esi]                        ; 03C3 _ 8B. 1E
        mov     dword [ebp-4H], ebx                     ; 03C5 _ 89. 5D, FC
        jmp     ?_029                                   ; 03C8 _ EB, E4

?_030:  cmp     dword [ebp-4H], 0                       ; 03CA _ 83. 7D, FC, 00
        jz      ?_031                                   ; 03CE _ 74, 07
        mov     eax, dword [ebp-4H]                     ; 03D0 _ 8B. 45, FC
        pop     esi                                     ; 03D3 _ 5E
        pop     ebx                                     ; 03D4 _ 5B
        leave                                           ; 03D5 _ C9
        ret                                             ; 03D6 _ C3

?_031:  mov     ecx, dword [ebp-1CH]                    ; 03D7 _ 8B. 4D, E4
        mov     edx, dword [ecx+10H]                    ; 03DA _ 8B. 51, 10
        mov     dword [ebp-1CH], edx                    ; 03DD _ 89. 55, E4
        jmp     ?_013                                   ; 03E0 _ E9, FFFFFE72
; ___tt_find_next_thread End of function

?_032:  ; Local function
        xor     eax, eax                                ; 03E5 _ 31. C0
        pop     esi                                     ; 03E7 _ 5E
        pop     ebx                                     ; 03E8 _ 5B
        leave                                           ; 03E9 _ C9
        ret                                             ; 03EA _ C3

___tt_task_switch:; Function begin
        mov     eax, esp                                ; 03EB _ 89. E0
        mov     ebx, dword [__imp__Sleep@4]             ; 03ED _ 8B. 1D, 00000000(segrel)
        mov     dword [ebx], eax                        ; 03F3 _ 89. 03
        call    ___tt_find_next_thread                  ; 03F5 _ E8, FFFFFE47
        mov     dword [__imp__Sleep@4], eax             ; 03FA _ A3, 00000000(segrel)
        mov     ebx, eax                                ; 03FF _ 89. C3
        mov     eax, dword [ebx]                        ; 0401 _ 8B. 03
        mov     esp, eax                                ; 0403 _ 89. C4
        ret                                             ; 0405 _ C3
; ___tt_task_switch End of function

_tt_yield:; Function begin
        push    ebx                                     ; 0406 _ 53
        push    esi                                     ; 0407 _ 56
        push    edi                                     ; 0408 _ 57
        pushfd                                          ; 0409 _ 9C
        pushad                                          ; 040A _ 60
        call    ___tt_task_switch                       ; 040B _ E8, FFFFFFDB
        popad                                           ; 0410 _ 61
        popfd                                           ; 0411 _ 9D
        pop     edi                                     ; 0412 _ 5F
        pop     esi                                     ; 0413 _ 5E
        pop     ebx                                     ; 0414 _ 5B
        ret                                             ; 0415 _ C3
; _tt_yield End of function

_tt_sleep_ticks:; Function begin
        call    _tt_get_tick_count                      ; 0416 _ E8, FFFFFBE5
        add     eax, dword [esp+4H]                     ; 041B _ 03. 44 24, 04
        mov     ecx, dword [__imp__Sleep@4]             ; 041F _ 8B. 0D, 00000000(segrel)
        mov     dword [ecx+8H], eax                     ; 0425 _ 89. 41, 08
        call    _tt_yield                               ; 0428 _ E8, FFFFFFD9
        ret                                             ; 042D _ C3
; _tt_sleep_ticks End of function

_tt_sleep_us:; Function begin
        mov     eax, dword [esp+4H]                     ; 042E _ 8B. 44 24, 04
        shl     eax, 8                                  ; 0432 _ C1. E0, 08
        shr     eax, 7                                  ; 0435 _ C1. E8, 07
        push    eax                                     ; 0438 _ 50
        call    _tt_sleep_ticks                         ; 0439 _ E8, FFFFFFD8
        add     esp, 4                                  ; 043E _ 83. C4, 04
        ret                                             ; 0441 _ C3
; _tt_sleep_us End of function

_tt_sleep_ms:; Function begin
        mov     eax, dword [esp+4H]                     ; 0442 _ 8B. 44 24, 04
        imul    ecx, eax, 256000                        ; 0446 _ 69. C8, 0003E800
        shr     ecx, 7                                  ; 044C _ C1. E9, 07
        push    ecx                                     ; 044F _ 51
        call    _tt_sleep_ticks                         ; 0450 _ E8, FFFFFFC1
        add     esp, 4                                  ; 0455 _ 83. C4, 04
        ret                                             ; 0458 _ C3
; _tt_sleep_ms End of function

_tt_sleep_until:; Function begin
        mov     eax, dword [esp+4H]                     ; 0459 _ 8B. 44 24, 04
        mov     ecx, dword [__imp__Sleep@4]             ; 045D _ 8B. 0D, 00000000(segrel)
        mov     dword [ecx+8H], eax                     ; 0463 _ 89. 41, 08
        call    _tt_yield                               ; 0466 _ E8, FFFFFF9B
        ret                                             ; 046B _ C3
; _tt_sleep_until End of function

_tt_get_current_thread:; Function begin
        mov     eax, dword [__imp__Sleep@4]             ; 046C _ A1, 00000000(segrel)
        ret                                             ; 0471 _ C3
; _tt_get_current_thread End of function

_tt_suspend_thread:; Function begin
        mov     eax, dword [esp+4H]                     ; 0472 _ 8B. 44 24, 04
        mov     dword [eax+8H], -1                      ; 0476 _ C7. 40, 08, FFFFFFFF
        ret                                             ; 047D _ C3
; _tt_suspend_thread End of function

_tt_wake_thread:; Function begin
        mov     eax, dword [esp+4H]                     ; 047E _ 8B. 44 24, 04
        mov     dword [eax+8H], 0                       ; 0482 _ C7. 40, 08, 00000000
        mov     ecx, dword [eax+4H]                     ; 0489 _ 8B. 48, 04
        mov     edx, dword [__imp__Sleep@4]             ; 048C _ 8B. 15, 00000000(segrel)
        cmp     ecx, dword [edx+4H]                     ; 0492 _ 3B. 4A, 04
        jnc     ?_033                                   ; 0495 _ 73, 05
        call    _tt_yield                               ; 0497 _ E8, FFFFFF6A
?_033:  ret                                             ; 049C _ C3
; _tt_wake_thread End of function

_tt_suspend_me:; Function begin
        push    dword [__imp__Sleep@4]                  ; 049D _ FF. 35, 00000000(segrel)
        call    _tt_suspend_thread                      ; 04A3 _ E8, FFFFFFCA
        call    _tt_yield                               ; 04A8 _ E8, FFFFFF59
        add     esp, 4                                  ; 04AD _ 83. C4, 04
        ret                                             ; 04B0 _ C3
; _tt_suspend_me End of function

_tt_suspend_until_threads_change:; Function begin
        mov     eax, dword [esp+4H]                     ; 04B1 _ 8B. 44 24, 04
        mov     dword [eax+8H], -2                      ; 04B5 _ C7. 40, 08, FFFFFFFE
        ret                                             ; 04BC _ C3
; _tt_suspend_until_threads_change End of function

_tt_suspend_me_until_threads_change:; Function begin
        push    dword [__imp__Sleep@4]                  ; 04BD _ FF. 35, 00000000(segrel)
        call    _tt_suspend_until_threads_change        ; 04C3 _ E8, FFFFFFE9
        call    _tt_yield                               ; 04C8 _ E8, FFFFFF39
        add     esp, 4                                  ; 04CD _ 83. C4, 04
        ret                                             ; 04D0 _ C3
; _tt_suspend_me_until_threads_change End of function

_tt_mutex_lock:; Function begin
        push    ebx                                     ; 04D1 _ 53
        push    esi                                     ; 04D2 _ 56
        mov     eax, dword [esp+0CH]                    ; 04D3 _ 8B. 44 24, 0C
        cmp     dword [eax], 0                          ; 04D7 _ 83. 38, 00
        jz      ?_034                                   ; 04DA _ 74, 14
        mov     ecx, dword [esp+0CH]                    ; 04DC _ 8B. 4C 24, 0C
        mov     edx, dword [__imp__Sleep@4]             ; 04E0 _ 8B. 15, 00000000(segrel)
        mov     dword [edx+0CH], ecx                    ; 04E6 _ 89. 4A, 0C
        call    _tt_yield                               ; 04E9 _ E8, FFFFFF18
        jmp     ?_035                                   ; 04EE _ EB, 0C

?_034:  mov     ebx, dword [__imp__Sleep@4]             ; 04F0 _ 8B. 1D, 00000000(segrel)
        mov     esi, dword [esp+0CH]                    ; 04F6 _ 8B. 74 24, 0C
        mov     dword [esi], ebx                        ; 04FA _ 89. 1E
?_035:  pop     esi                                     ; 04FC _ 5E
        pop     ebx                                     ; 04FD _ 5B
        ret                                             ; 04FE _ C3
; _tt_mutex_lock End of function

_tt_mutex_unlock:; Function begin
        enter   4, 0                                    ; 04FF _ C8, 0004, 00
        push    ebx                                     ; 0503 _ 53
        push    esi                                     ; 0504 _ 56
        mov     eax, dword [__acrtused_con]             ; 0505 _ A1, 00000000(segrel)
        mov     dword [ebp-4H], eax                     ; 050A _ 89. 45, FC
?_036:  cmp     dword [ebp-4H], 0                       ; 050D _ 83. 7D, FC, 00
        jz      ?_039                                   ; 0511 _ 74, 43
        mov     ecx, dword [ebp-4H]                     ; 0513 _ 8B. 4D, FC
        mov     edx, dword [ecx+0CH]                    ; 0516 _ 8B. 51, 0C
        cmp     edx, dword [ebp+8H]                     ; 0519 _ 3B. 55, 08
        jnz     ?_038                                   ; 051C _ 75, 2D
        mov     ebx, dword [ebp-4H]                     ; 051E _ 8B. 5D, FC
        mov     esi, dword [ebp+8H]                     ; 0521 _ 8B. 75, 08
        mov     dword [esi], ebx                        ; 0524 _ 89. 1E
        mov     eax, dword [ebp-4H]                     ; 0526 _ 8B. 45, FC
        mov     dword [eax+0CH], 0                      ; 0529 _ C7. 40, 0C, 00000000
        mov     ecx, dword [eax+4H]                     ; 0530 _ 8B. 48, 04
        mov     edx, dword [__imp__Sleep@4]             ; 0533 _ 8B. 15, 00000000(segrel)
        cmp     ecx, dword [edx+4H]                     ; 0539 _ 3B. 4A, 04
        jnc     ?_037                                   ; 053C _ 73, 09
        call    _tt_yield                               ; 053E _ E8, FFFFFEC3
        pop     esi                                     ; 0543 _ 5E
        pop     ebx                                     ; 0544 _ 5B
        leave                                           ; 0545 _ C9
        ret                                             ; 0546 _ C3

?_037:  pop     esi                                     ; 0547 _ 5E
        pop     ebx                                     ; 0548 _ 5B
        leave                                           ; 0549 _ C9
        ret                                             ; 054A _ C3

?_038:  mov     ebx, dword [ebp-4H]                     ; 054B _ 8B. 5D, FC
        mov     esi, dword [ebx+10H]                    ; 054E _ 8B. 73, 10
        mov     dword [ebp-4H], esi                     ; 0551 _ 89. 75, FC
        jmp     ?_036                                   ; 0554 _ EB, B7
; _tt_mutex_unlock End of function

?_039:  ; Local function
        mov     eax, dword [ebp+8H]                     ; 0556 _ 8B. 45, 08
        mov     dword [eax], 0                          ; 0559 _ C7. 00, 00000000
        pop     esi                                     ; 055F _ 5E
        pop     ebx                                     ; 0560 _ 5B
        leave                                           ; 0561 _ C9
        ret                                             ; 0562 _ C3

_tt_wait_for_all_finish:; Function begin
        enter   16, 0                                   ; 0563 _ C8, 0010, 00
        push    ebx                                     ; 0567 _ 53
        call    _tt_get_current_thread                  ; 0568 _ E8, FFFFFEFF
        mov     dword [ebp-10H], eax                    ; 056D _ 89. 45, F0
        mov     dword [ebp-0CH], FLAT:_printf           ; 0570 _ C7. 45, F4, 00000000(segrel)
        mov     dword [ebp-8H], 0                       ; 0577 _ C7. 45, F8, 00000000
?_040:  call    _tt_suspend_me_until_threads_change     ; 057E _ E8, FFFFFF3A
        mov     eax, dword [__acrtused_con]             ; 0583 _ A1, 00000000(segrel)
        mov     dword [ebp-4H], eax                     ; 0588 _ 89. 45, FC
        mov     dword [ebp-8H], 0                       ; 058B _ C7. 45, F8, 00000000
?_041:  cmp     dword [ebp-4H], 0                       ; 0592 _ 83. 7D, FC, 00
        jz      ?_043                                   ; 0596 _ 74, 1B
        mov     ecx, dword [ebp-4H]                     ; 0598 _ 8B. 4D, FC
        cmp     ecx, dword [ebp-10H]                    ; 059B _ 3B. 4D, F0
        jz      ?_042                                   ; 059E _ 74, 08
        cmp     ecx, dword [ebp-0CH]                    ; 05A0 _ 3B. 4D, F4
        jz      ?_042                                   ; 05A3 _ 74, 03
        inc     dword [ebp-8H]                          ; 05A5 _ FF. 45, F8
?_042:  mov     edx, dword [ebp-4H]                     ; 05A8 _ 8B. 55, FC
        mov     ebx, dword [edx+10H]                    ; 05AB _ 8B. 5A, 10
        mov     dword [ebp-4H], ebx                     ; 05AE _ 89. 5D, FC
        jmp     ?_041                                   ; 05B1 _ EB, DF
; _tt_wait_for_all_finish End of function

?_043:  ; Local function
        cmp     dword [ebp-8H], 0                       ; 05B3 _ 83. 7D, F8, 00
        jnz     ?_040                                   ; 05B7 _ 75, C5
        pop     ebx                                     ; 05B9 _ 5B
        leave                                           ; 05BA _ C9
        ret                                             ; 05BB _ C3

_tt_exit_thread:; Function begin
        push    dword [__imp__Sleep@4]                  ; 05BC _ FF. 35, 00000000(segrel)
        call    _tt_remove_thread                       ; 05C2 _ E8, FFFFFC13
        call    _tt_suspend_me                          ; 05C7 _ E8, FFFFFED1
        add     esp, 4                                  ; 05CC _ 83. C4, 04
        ret                                             ; 05CF _ C3
; _tt_exit_thread End of function

_test1: ; Function begin
        enter   4, 0                                    ; 05D0 _ C8, 0004, 00
        mov     dword [ebp-4H], 0                       ; 05D4 _ C7. 45, FC, 00000000
?_044:  cmp     dword [ebp-4H], 10                      ; 05DB _ 83. 7D, FC, 0A
        jnc     ?_046                                   ; 05DF _ 73, 2B
        cmp     dword [ebp-4H], 7                       ; 05E1 _ 83. 7D, FC, 07
        jnz     ?_045                                   ; 05E5 _ 75, 0E
        push    dword [__acrtused_con]                  ; 05E7 _ FF. 35, 00000000(segrel)
        call    _tt_wake_thread                         ; 05ED _ E8, FFFFFE8C
        add     esp, 4                                  ; 05F2 _ 83. C4, 04
?_045:  push    FLAT:?_066                              ; 05F5 _ 68, 00000044(segrel)
        call    __acrtused_con                          ; 05FA _ E8, 00000000(rel)
        call    _tt_yield                               ; 05FF _ E8, FFFFFE02
        add     esp, 4                                  ; 0604 _ 83. C4, 04
        inc     dword [ebp-4H]                          ; 0607 _ FF. 45, FC
        jmp     ?_044                                   ; 060A _ EB, CF
; _test1 End of function

?_046:  ; Local function
        leave                                           ; 060C _ C9
        ret                                             ; 060D _ C3

_test2: ; Function begin
        enter   4, 0                                    ; 060E _ C8, 0004, 00
        push    FLAT:?_067                              ; 0612 _ 68, 00000050(segrel)
        call    __acrtused_con                          ; 0617 _ E8, 00000000(rel)
        call    _tt_suspend_me                          ; 061C _ E8, FFFFFE7C
        push    FLAT:?_068                              ; 0621 _ 68, 0000005C(segrel)
        call    __acrtused_con                          ; 0626 _ E8, 00000000(rel)
        add     esp, 8                                  ; 062B _ 83. C4, 08
        mov     dword [ebp-4H], 0                       ; 062E _ C7. 45, FC, 00000000
?_047:  cmp     dword [ebp-4H], 12                      ; 0635 _ 83. 7D, FC, 0C
        jnc     ?_050                                   ; 0639 _ 73, 51
        push    FLAT:?_067                              ; 063B _ 68, 00000050(segrel)
        call    __acrtused_con                          ; 0640 _ E8, 00000000(rel)
        add     esp, 4                                  ; 0645 _ 83. C4, 04
        cmp     dword [ebp-4H], 2                       ; 0648 _ 83. 7D, FC, 02
        jnz     ?_048                                   ; 064C _ 75, 17
        push    FLAT:?_069                              ; 064E _ 68, 00000070(segrel)
        call    __acrtused_con                          ; 0653 _ E8, 00000000(rel)
        push    FLAT:__acrtused_con                     ; 0658 _ 68, 00000000(segrel)
        call    _tt_mutex_lock                          ; 065D _ E8, FFFFFE6F
        add     esp, 8                                  ; 0662 _ 83. C4, 08
?_048:  cmp     dword [ebp-4H], 7                       ; 0665 _ 83. 7D, FC, 07
        jnz     ?_049                                   ; 0669 _ 75, 17
        push    FLAT:?_070                              ; 066B _ 68, 00000084(segrel)
        call    __acrtused_con                          ; 0670 _ E8, 00000000(rel)
        push    FLAT:__acrtused_con                     ; 0675 _ 68, 00000000(segrel)
        call    _tt_mutex_unlock                        ; 067A _ E8, FFFFFE80
        add     esp, 8                                  ; 067F _ 83. C4, 08
?_049:  call    _tt_yield                               ; 0682 _ E8, FFFFFD7F
        inc     dword [ebp-4H]                          ; 0687 _ FF. 45, FC
        jmp     ?_047                                   ; 068A _ EB, A9
; _test2 End of function

?_050:  ; Local function
        leave                                           ; 068C _ C9
        ret                                             ; 068D _ C3

_test3: ; Function begin
        enter   4, 0                                    ; 068E _ C8, 0004, 00
        xor     eax, eax                                ; 0692 _ 31. C0
        mov     dword [ebp-4H], eax                     ; 0694 _ 89. 45, FC
        mov     dword [ebp-4H], eax                     ; 0697 _ 89. 45, FC
?_051:  cmp     dword [ebp-4H], 8                       ; 069A _ 83. 7D, FC, 08
        jnc     ?_053                                   ; 069E _ 73, 36
        cmp     dword [ebp-4H], 4                       ; 06A0 _ 83. 7D, FC, 04
        jnz     ?_052                                   ; 06A4 _ 75, 19
        push    dword [__acrtused_con]                  ; 06A6 _ FF. 35, 00000000(segrel)
        call    _tt_wake_thread                         ; 06AC _ E8, FFFFFDCD
        push    dword [__acrtused_con]                  ; 06B1 _ FF. 35, 00000000(segrel)
        call    _tt_wake_thread                         ; 06B7 _ E8, FFFFFDC2
        add     esp, 8                                  ; 06BC _ 83. C4, 08
?_052:  push    FLAT:?_071                              ; 06BF _ 68, 0000009C(segrel)
        call    __acrtused_con                          ; 06C4 _ E8, 00000000(rel)
        call    _tt_yield                               ; 06C9 _ E8, FFFFFD38
        add     esp, 4                                  ; 06CE _ 83. C4, 04
        inc     dword [ebp-4H]                          ; 06D1 _ FF. 45, FC
        jmp     ?_051                                   ; 06D4 _ EB, C4
; _test3 End of function

?_053:  ; Local function
        leave                                           ; 06D6 _ C9
        ret                                             ; 06D7 _ C3

_test4: ; Function begin
        enter   4, 0                                    ; 06D8 _ C8, 0004, 00
        xor     eax, eax                                ; 06DC _ 31. C0
        mov     dword [ebp-4H], eax                     ; 06DE _ 89. 45, FC
        mov     dword [ebp-4H], eax                     ; 06E1 _ 89. 45, FC
?_054:  cmp     dword [ebp-4H], 8                       ; 06E4 _ 83. 7D, FC, 08
        jnc     ?_055                                   ; 06E8 _ 73, 17
        push    FLAT:?_072                              ; 06EA _ 68, 000000A8(segrel)
        call    __acrtused_con                          ; 06EF _ E8, 00000000(rel)
        call    _tt_yield                               ; 06F4 _ E8, FFFFFD0D
        add     esp, 4                                  ; 06F9 _ 83. C4, 04
        inc     dword [ebp-4H]                          ; 06FC _ FF. 45, FC
        jmp     ?_054                                   ; 06FF _ EB, E3
; _test4 End of function

?_055:  ; Local function
        leave                                           ; 0701 _ C9
        ret                                             ; 0702 _ C3

_test5: ; Function begin
        push    FLAT:?_073                              ; 0703 _ 68, 000000B4(segrel)
        call    __acrtused_con                          ; 0708 _ E8, 00000000(rel)
        push    2000                                    ; 070D _ 68, 000007D0
        call    _tt_sleep_ticks                         ; 0712 _ E8, FFFFFCFF
        push    FLAT:?_074                              ; 0717 _ 68, 000000C4(segrel)
        call    __acrtused_con                          ; 071C _ E8, 00000000(rel)
        add     esp, 12                                 ; 0721 _ 83. C4, 0C
        ret                                             ; 0724 _ C3
; _test5 End of function

_test6: ; Function begin
        enter   4, 0                                    ; 0725 _ C8, 0004, 00
        xor     eax, eax                                ; 0729 _ 31. C0
        mov     dword [ebp-4H], eax                     ; 072B _ 89. 45, FC
        mov     dword [ebp-4H], eax                     ; 072E _ 89. 45, FC
?_056:  cmp     dword [ebp-4H], 12                      ; 0731 _ 83. 7D, FC, 0C
        jnc     ?_059                                   ; 0735 _ 73, 51
        push    FLAT:?_075                              ; 0737 _ 68, 000000D4(segrel)
        call    __acrtused_con                          ; 073C _ E8, 00000000(rel)
        add     esp, 4                                  ; 0741 _ 83. C4, 04
        cmp     dword [ebp-4H], 2                       ; 0744 _ 83. 7D, FC, 02
        jnz     ?_057                                   ; 0748 _ 75, 17
        push    FLAT:?_076                              ; 074A _ 68, 000000E0(segrel)
        call    __acrtused_con                          ; 074F _ E8, 00000000(rel)
        push    FLAT:__acrtused_con                     ; 0754 _ 68, 00000000(segrel)
        call    _tt_mutex_lock                          ; 0759 _ E8, FFFFFD73
        add     esp, 8                                  ; 075E _ 83. C4, 08
?_057:  cmp     dword [ebp-4H], 8                       ; 0761 _ 83. 7D, FC, 08
        jnz     ?_058                                   ; 0765 _ 75, 17
        push    FLAT:?_077                              ; 0767 _ 68, 000000F4(segrel)
        call    __acrtused_con                          ; 076C _ E8, 00000000(rel)
        push    FLAT:__acrtused_con                     ; 0771 _ 68, 00000000(segrel)
        call    _tt_mutex_unlock                        ; 0776 _ E8, FFFFFD84
        add     esp, 8                                  ; 077B _ 83. C4, 08
?_058:  call    _tt_yield                               ; 077E _ E8, FFFFFC83
        inc     dword [ebp-4H]                          ; 0783 _ FF. 45, FC
        jmp     ?_056                                   ; 0786 _ EB, A9
; _test6 End of function

?_059:  ; Local function
        leave                                           ; 0788 _ C9
        ret                                             ; 0789 _ C3

_main:  ; Function begin
        push    ebp                                     ; 078A _ 55
        mov     ebp, esp                                ; 078B _ 8B. EC
        mov     edx, 12                                 ; 078D _ BA, 0000000C
?_060:  sub     esp, 4096                               ; 0792 _ 81. EC, 00001000
        test    dword [esp], esp                        ; 0798 _ 85. 24 24
        dec     edx                                     ; 079B _ 4A
        jnz     ?_060                                   ; 079C _ 75, F4
        sub     esp, 124                                ; 079E _ 83. EC, 7C
        push    ebx                                     ; 07A1 _ 53
        push    esi                                     ; 07A2 _ 56
        call    _tt_init                                ; 07A3 _ E8, FFFFF86E
        call    _tt_get_current_thread                  ; 07A8 _ E8, FFFFFCBF
        mov     dword [__acrtused_con], eax             ; 07AD _ A3, 00000000(segrel)
        mov     dword [__acrtused_con], 0               ; 07B2 _ C7. 05, 00000000(segrel), 00000000
        push    FLAT:_test1                             ; 07BC _ 68, 000005D0(segrel)
        push    8192                                    ; 07C1 _ 68, 00002000
        lea     eax, [ebp-0C064H]                       ; 07C6 _ 8D. 85, FFFF3F9C
        push    eax                                     ; 07CC _ 50
        call    _tt_prepare_stack                       ; 07CD _ E8, FFFFF8A5
        mov     dword [ebp-0C078H], eax                 ; 07D2 _ 89. 85, FFFF3F88
        mov     ecx, 128                                ; 07D8 _ B9, 00000080
        mov     dword [ebp-0C074H], ecx                 ; 07DD _ 89. 8D, FFFF3F8C
        xor     edx, edx                                ; 07E3 _ 31. D2
        mov     dword [ebp-0C070H], edx                 ; 07E5 _ 89. 95, FFFF3F90
        mov     dword [ebp-0C06CH], edx                 ; 07EB _ 89. 95, FFFF3F94
        mov     dword [ebp-0C068H], edx                 ; 07F1 _ 89. 95, FFFF3F98
        lea     ebx, [ebp-0C078H]                       ; 07F7 _ 8D. 9D, FFFF3F88
        mov     dword [__acrtused_con], ebx             ; 07FD _ 89. 1D, 00000000(segrel)
        push    ebx                                     ; 0803 _ 53
        call    _tt_add_thread                          ; 0804 _ E8, FFFFF94A
        push    FLAT:_test2                             ; 0809 _ 68, 0000060E(segrel)
        push    8192                                    ; 080E _ 68, 00002000
        lea     esi, [ebp-0A050H]                       ; 0813 _ 8D. B5, FFFF5FB0
        push    esi                                     ; 0819 _ 56
        call    _tt_prepare_stack                       ; 081A _ E8, FFFFF858
        mov     dword [ebp-0A064H], eax                 ; 081F _ 89. 85, FFFF5F9C
        mov     dword [ebp-0A060H], 124                 ; 0825 _ C7. 85, FFFF5FA0, 0000007C
        mov     dword [ebp-0A05CH], 0                   ; 082F _ C7. 85, FFFF5FA4, 00000000
        mov     dword [ebp-0A058H], 0                   ; 0839 _ C7. 85, FFFF5FA8, 00000000
        mov     dword [ebp-0A054H], 0                   ; 0843 _ C7. 85, FFFF5FAC, 00000000
        lea     eax, [ebp-0A064H]                       ; 084D _ 8D. 85, FFFF5F9C
        mov     dword [__acrtused_con], eax             ; 0853 _ A3, 00000000(segrel)
        push    eax                                     ; 0858 _ 50
        call    _tt_add_thread                          ; 0859 _ E8, FFFFF8F5
        push    FLAT:_test3                             ; 085E _ 68, 0000068E(segrel)
        push    8192                                    ; 0863 _ 68, 00002000
        lea     ecx, [ebp-803CH]                        ; 0868 _ 8D. 8D, FFFF7FC4
        push    ecx                                     ; 086E _ 51
        call    _tt_prepare_stack                       ; 086F _ E8, FFFFF803
        mov     dword [ebp-8050H], eax                  ; 0874 _ 89. 85, FFFF7FB0
        mov     dword [ebp-804CH], 126                  ; 087A _ C7. 85, FFFF7FB4, 0000007E
        mov     dword [ebp-8048H], 0                    ; 0884 _ C7. 85, FFFF7FB8, 00000000
        mov     dword [ebp-8044H], 0                    ; 088E _ C7. 85, FFFF7FBC, 00000000
        mov     dword [ebp-8040H], 0                    ; 0898 _ C7. 85, FFFF7FC0, 00000000
        lea     edx, [ebp-8050H]                        ; 08A2 _ 8D. 95, FFFF7FB0
        mov     dword [__acrtused_con], edx             ; 08A8 _ 89. 15, 00000000(segrel)
        push    edx                                     ; 08AE _ 52
        call    _tt_add_thread                          ; 08AF _ E8, FFFFF89F
        push    FLAT:_test4                             ; 08B4 _ 68, 000006D8(segrel)
        push    8192                                    ; 08B9 _ 68, 00002000
        lea     ebx, [ebp-6028H]                        ; 08BE _ 8D. 9D, FFFF9FD8
        push    ebx                                     ; 08C4 _ 53
        call    _tt_prepare_stack                       ; 08C5 _ E8, FFFFF7AD
        mov     dword [ebp-603CH], eax                  ; 08CA _ 89. 85, FFFF9FC4
        mov     esi, dword [ebp-804CH]                  ; 08D0 _ 8B. B5, FFFF7FB4
        mov     dword [ebp-6038H], esi                  ; 08D6 _ 89. B5, FFFF9FC8
        mov     dword [ebp-6034H], -1                   ; 08DC _ C7. 85, FFFF9FCC, FFFFFFFF
        mov     dword [ebp-6030H], 0                    ; 08E6 _ C7. 85, FFFF9FD0, 00000000
        mov     dword [ebp-602CH], 0                    ; 08F0 _ C7. 85, FFFF9FD4, 00000000
        lea     eax, [ebp-603CH]                        ; 08FA _ 8D. 85, FFFF9FC4
        mov     dword [__acrtused_con], eax             ; 0900 _ A3, 00000000(segrel)
        push    eax                                     ; 0905 _ 50
        call    _tt_add_thread                          ; 0906 _ E8, FFFFF848
        push    FLAT:_test5                             ; 090B _ 68, 00000703(segrel)
        push    8192                                    ; 0910 _ 68, 00002000
        lea     ecx, [ebp-4014H]                        ; 0915 _ 8D. 8D, FFFFBFEC
        push    ecx                                     ; 091B _ 51
        call    _tt_prepare_stack                       ; 091C _ E8, FFFFF756
        mov     dword [ebp-4028H], eax                  ; 0921 _ 89. 85, FFFFBFD8
        mov     dword [ebp-4024H], 128                  ; 0927 _ C7. 85, FFFFBFDC, 00000080
        mov     dword [ebp-4020H], 0                    ; 0931 _ C7. 85, FFFFBFE0, 00000000
        mov     dword [ebp-401CH], 0                    ; 093B _ C7. 85, FFFFBFE4, 00000000
        mov     dword [ebp-4018H], 0                    ; 0945 _ C7. 85, FFFFBFE8, 00000000
        lea     edx, [ebp-4028H]                        ; 094F _ 8D. 95, FFFFBFD8
        mov     dword [__acrtused_con], edx             ; 0955 _ 89. 15, 00000000(segrel)
        push    edx                                     ; 095B _ 52
        call    _tt_add_thread                          ; 095C _ E8, FFFFF7F2
        push    FLAT:_test6                             ; 0961 _ 68, 00000725(segrel)
        push    8192                                    ; 0966 _ 68, 00002000
        lea     ebx, [ebp-2000H]                        ; 096B _ 8D. 9D, FFFFE000
        push    ebx                                     ; 0971 _ 53
        call    _tt_prepare_stack                       ; 0972 _ E8, FFFFF700
        mov     dword [ebp-2014H], eax                  ; 0977 _ 89. 85, FFFFDFEC
        mov     esi, dword [ebp-804CH]                  ; 097D _ 8B. B5, FFFF7FB4
        mov     dword [ebp-2010H], esi                  ; 0983 _ 89. B5, FFFFDFF0
        mov     dword [ebp-200CH], 0                    ; 0989 _ C7. 85, FFFFDFF4, 00000000
        mov     dword [ebp-2008H], 0                    ; 0993 _ C7. 85, FFFFDFF8, 00000000
        mov     dword [ebp-2004H], 0                    ; 099D _ C7. 85, FFFFDFFC, 00000000
        lea     eax, [ebp-2014H]                        ; 09A7 _ 8D. 85, FFFFDFEC
        mov     dword [__acrtused_con], eax             ; 09AD _ A3, 00000000(segrel)
        push    eax                                     ; 09B2 _ 50
        call    _tt_add_thread                          ; 09B3 _ E8, FFFFF79B
        call    _tt_suspend_me                          ; 09B8 _ E8, FFFFFAE0
        add     esp, 96                                 ; 09BD _ 83. C4, 60
        mov     dword [ebp-0C07CH], 0                   ; 09C0 _ C7. 85, FFFF3F84, 00000000
?_061:  cmp     dword [ebp-0C07CH], 12                  ; 09CA _ 83. BD, FFFF3F84, 0C
        jnc     ?_062                                   ; 09D1 _ 73, 1A
        push    FLAT:?_078                              ; 09D3 _ 68, 00000108(segrel)
        call    __acrtused_con                          ; 09D8 _ E8, 00000000(rel)
        call    _tt_yield                               ; 09DD _ E8, FFFFFA24
        add     esp, 4                                  ; 09E2 _ 83. C4, 04
        inc     dword [ebp-0C07CH]                      ; 09E5 _ FF. 85, FFFF3F84
        jmp     ?_061                                   ; 09EB _ EB, DD
; _main End of function

?_062:  ; Local function
        call    _tt_wait_for_all_finish                 ; 09ED _ E8, FFFFFB71
        xor     eax, eax                                ; 09F2 _ 31. C0
        pop     esi                                     ; 09F4 _ 5E
        pop     ebx                                     ; 09F5 _ 5B
        leave                                           ; 09F6 _ C9
        ret                                             ; 09F7 _ C3


SECTION .DATA   align=4 noexecute                       ; section number 2, data

        db 49H, 64H, 6CH, 65H, 20H, 46H, 0AH, 00H       ; 0000 _ Idle F..

?_063:                                                  ; byte
        db 44H, 65H, 62H, 75H, 67H, 20H, 28H, 6EH       ; 0008 _ Debug (n
        db 6FH, 77H, 20H, 3DH, 20H, 25H, 64H, 29H       ; 0010 _ ow = %d)
        db 3AH, 20H, 0AH, 00H                           ; 0018 _ : ..

?_064:                                                  ; byte
        db 54H, 68H, 72H, 65H, 61H, 64H, 3BH, 20H       ; 001C _ Thread; 
        db 70H, 72H, 69H, 6FH, 72H, 69H, 74H, 79H       ; 0024 _ priority
        db 3AH, 20H, 25H, 78H, 3BH, 20H, 72H, 65H       ; 002C _ : %x; re
        db 61H, 64H, 79H, 3AH, 20H, 25H, 78H, 3BH       ; 0034 _ ady: %x;
        db 0AH, 00H, 00H, 00H                           ; 003C _ ....

?_065:                                                  ; byte
        db 0AH, 00H, 00H, 00H                           ; 0040 _ ....

?_066:                                                  ; byte
        db 54H, 68H, 72H, 65H, 61H, 64H, 20H, 31H       ; 0044 _ Thread 1
        db 0AH, 00H, 00H, 00H                           ; 004C _ ....

?_067:                                                  ; byte
        db 09H, 09H, 54H, 68H, 72H, 65H, 61H, 64H       ; 0050 _ ..Thread
        db 20H, 32H, 0AH, 00H                           ; 0058 _  2..

?_068:                                                  ; byte
        db 09H, 09H, 54H, 68H, 72H, 65H, 61H, 64H       ; 005C _ ..Thread
        db 20H, 32H, 20H, 61H, 67H, 61H, 69H, 6EH       ; 0064 _  2 again
        db 21H, 0AH, 00H, 00H                           ; 006C _ !...

?_069:                                                  ; byte
        db 09H, 09H, 4CH, 6FH, 63H, 6BH, 69H, 6EH       ; 0070 _ ..Lockin
        db 67H, 20H, 6DH, 75H, 74H, 65H, 78H, 20H       ; 0078 _ g mutex 
        db 41H, 0AH, 00H, 00H                           ; 0080 _ A...

?_070:                                                  ; byte
        db 09H, 09H, 55H, 6EH, 6CH, 6FH, 63H, 6BH       ; 0084 _ ..Unlock
        db 69H, 6EH, 67H, 20H, 6DH, 75H, 74H, 65H       ; 008C _ ing mute
        db 78H, 20H, 41H, 0AH, 00H, 00H, 00H, 00H       ; 0094 _ x A.....

?_071:                                                  ; byte
        db 09H, 54H, 68H, 72H, 65H, 61H, 64H, 20H       ; 009C _ .Thread 
        db 33H, 0AH, 00H, 00H                           ; 00A4 _ 3...

?_072:                                                  ; byte
        db 09H, 54H, 68H, 72H, 65H, 61H, 64H, 20H       ; 00A8 _ .Thread 
        db 34H, 0AH, 00H, 00H                           ; 00B0 _ 4...

?_073:                                                  ; byte
        db 54H, 68H, 72H, 65H, 61H, 64H, 20H, 35H       ; 00B4 _ Thread 5
        db 20H, 73H, 74H, 61H, 72H, 74H, 0AH, 00H       ; 00BC _  start..

?_074:                                                  ; byte
        db 54H, 68H, 72H, 65H, 61H, 64H, 20H, 35H       ; 00C4 _ Thread 5
        db 20H, 73H, 74H, 6FH, 70H, 0AH, 00H, 00H       ; 00CC _  stop...

?_075:                                                  ; byte
        db 09H, 54H, 68H, 72H, 65H, 61H, 64H, 20H       ; 00D4 _ .Thread 
        db 36H, 0AH, 00H, 00H                           ; 00DC _ 6...

?_076:                                                  ; byte
        db 09H, 4CH, 6FH, 63H, 6BH, 69H, 6EH, 67H       ; 00E0 _ .Locking
        db 20H, 6DH, 75H, 74H, 65H, 78H, 20H, 41H       ; 00E8 _  mutex A
        db 0AH, 00H, 00H, 00H                           ; 00F0 _ ....

?_077:                                                  ; byte
        db 09H, 55H, 6EH, 6CH, 6FH, 63H, 6BH, 69H       ; 00F4 _ .Unlocki
        db 6EH, 67H, 20H, 6DH, 75H, 74H, 65H, 78H       ; 00FC _ ng mutex
        db 20H, 41H, 0AH, 00H                           ; 0104 _  A..

?_078:                                                  ; byte
        db 48H, 65H, 6CH, 6CH, 6FH, 20H, 57H, 6FH       ; 0108 _ Hello Wo
        db 72H, 6CH, 64H, 21H, 0AH, 00H                 ; 0110 _ rld!..


SECTION CONST   align=4 noexecute                       ; section number 3, const


SECTION .BSS    align=4 noexecute                       ; section number 4, bss


SECTION $_tt_first_thread align=1 noexecute             ; section number 5, unknown type: 00000000
;  Communal section not supported by YASM

?_079:                                                  ; byte
        db 00H, 00H, 00H, 00H                           ; 0000 _ ....


SECTION $_tt_current_thread align=1 noexecute           ; section number 6, unknown type: 00000000
;  Communal section not supported by YASM

?_080:                                                  ; byte
        db 00H, 00H, 00H, 00H                           ; 0000 _ ....


SECTION $_tt_obj_main_thread align=1 noexecute          ; section number 7, unknown type: 00000000
;  Communal section not supported by YASM

        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0000 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0008 _ ........
        db 00H, 00H, 00H, 00H                           ; 0010 _ ....


SECTION $_tt_obj_idle_thread align=1 noexecute          ; section number 8, unknown type: 00000000
;  Communal section not supported by YASM

        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0000 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0008 _ ........
        db 00H, 00H, 00H, 00H                           ; 0010 _ ....


SECTION $_tt_idle_thread_stack align=1 noexecute        ; section number 9, unknown type: 00000000
;  Communal section not supported by YASM

@:                                                     ; byte
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0000 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0008 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0010 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0018 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0020 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0028 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0030 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0038 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0040 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0048 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0050 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0058 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0060 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0068 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0070 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0078 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0080 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0088 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0090 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0098 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 00A0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 00A8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 00B0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 00B8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 00C0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 00C8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 00D0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 00D8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 00E0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 00E8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 00F0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 00F8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0100 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0108 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0110 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0118 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0120 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0128 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0130 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0138 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0140 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0148 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0150 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0158 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0160 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0168 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0170 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0178 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0180 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0188 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0190 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0198 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 01A0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 01A8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 01B0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 01B8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 01C0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 01C8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 01D0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 01D8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 01E0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 01E8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 01F0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 01F8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0200 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0208 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0210 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0218 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0220 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0228 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0230 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0238 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0240 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0248 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0250 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0258 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0260 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0268 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0270 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0278 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0280 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0288 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0290 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0298 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 02A0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 02A8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 02B0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 02B8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 02C0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 02C8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 02D0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 02D8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 02E0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 02E8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 02F0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 02F8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0300 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0308 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0310 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0318 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0320 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0328 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0330 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0338 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0340 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0348 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0350 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0358 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0360 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0368 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0370 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0378 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0380 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0388 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0390 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0398 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 03A0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 03A8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 03B0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 03B8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 03C0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 03C8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 03D0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 03D8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 03E0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 03E8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 03F0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 03F8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0400 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0408 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0410 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0418 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0420 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0428 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0430 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0438 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0440 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0448 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0450 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0458 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0460 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0468 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0470 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0478 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0480 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0488 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0490 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0498 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 04A0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 04A8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 04B0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 04B8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 04C0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 04C8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 04D0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 04D8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 04E0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 04E8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 04F0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 04F8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0500 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0508 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0510 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0518 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0520 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0528 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0530 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0538 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0540 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0548 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0550 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0558 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0560 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0568 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0570 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0578 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0580 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0588 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0590 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0598 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 05A0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 05A8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 05B0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 05B8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 05C0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 05C8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 05D0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 05D8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 05E0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 05E8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 05F0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 05F8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0600 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0608 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0610 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0618 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0620 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0628 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0630 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0638 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0640 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0648 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0650 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0658 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0660 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0668 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0670 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0678 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0680 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0688 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0690 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0698 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 06A0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 06A8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 06B0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 06B8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 06C0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 06C8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 06D0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 06D8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 06E0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 06E8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 06F0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 06F8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0700 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0708 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0710 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0718 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0720 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0728 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0730 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0738 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0740 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0748 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0750 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0758 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0760 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0768 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0770 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0778 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0780 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0788 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0790 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0798 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 07A0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 07A8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 07B0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 07B8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 07C0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 07C8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 07D0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 07D8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 07E0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 07E8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 07F0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 07F8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0800 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0808 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0810 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0818 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0820 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0828 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0830 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0838 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0840 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0848 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0850 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0858 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0860 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0868 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0870 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0878 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0880 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0888 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0890 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0898 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 08A0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 08A8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 08B0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 08B8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 08C0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 08C8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 08D0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 08D8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 08E0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 08E8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 08F0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 08F8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0900 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0908 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0910 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0918 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0920 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0928 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0930 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0938 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0940 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0948 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0950 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0958 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0960 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0968 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0970 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0978 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0980 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0988 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0990 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0998 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 09A0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 09A8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 09B0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 09B8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 09C0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 09C8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 09D0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 09D8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 09E0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 09E8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 09F0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 09F8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0A00 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0A08 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0A10 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0A18 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0A20 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0A28 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0A30 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0A38 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0A40 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0A48 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0A50 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0A58 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0A60 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0A68 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0A70 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0A78 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0A80 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0A88 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0A90 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0A98 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0AA0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0AA8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0AB0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0AB8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0AC0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0AC8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0AD0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0AD8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0AE0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0AE8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0AF0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0AF8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0B00 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0B08 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0B10 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0B18 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0B20 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0B28 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0B30 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0B38 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0B40 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0B48 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0B50 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0B58 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0B60 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0B68 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0B70 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0B78 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0B80 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0B88 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0B90 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0B98 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0BA0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0BA8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0BB0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0BB8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0BC0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0BC8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0BD0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0BD8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0BE0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0BE8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0BF0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0BF8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0C00 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0C08 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0C10 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0C18 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0C20 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0C28 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0C30 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0C38 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0C40 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0C48 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0C50 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0C58 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0C60 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0C68 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0C70 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0C78 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0C80 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0C88 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0C90 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0C98 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0CA0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0CA8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0CB0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0CB8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0CC0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0CC8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0CD0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0CD8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0CE0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0CE8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0CF0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0CF8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0D00 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0D08 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0D10 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0D18 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0D20 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0D28 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0D30 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0D38 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0D40 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0D48 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0D50 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0D58 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0D60 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0D68 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0D70 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0D78 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0D80 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0D88 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0D90 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0D98 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0DA0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0DA8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0DB0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0DB8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0DC0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0DC8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0DD0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0DD8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0DE0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0DE8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0DF0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0DF8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0E00 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0E08 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0E10 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0E18 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0E20 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0E28 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0E30 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0E38 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0E40 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0E48 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0E50 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0E58 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0E60 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0E68 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0E70 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0E78 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0E80 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0E88 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0E90 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0E98 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0EA0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0EA8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0EB0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0EB8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0EC0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0EC8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0ED0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0ED8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0EE0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0EE8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0EF0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0EF8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0F00 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0F08 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0F10 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0F18 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0F20 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0F28 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0F30 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0F38 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0F40 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0F48 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0F50 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0F58 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0F60 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0F68 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0F70 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0F78 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0F80 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0F88 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0F90 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0F98 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0FA0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0FA8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0FB0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0FB8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0FC0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0FC8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0FD0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0FD8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0FE0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0FE8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0FF0 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0FF8 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 1000 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 1008 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 1010 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 1018 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 1020 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 1028 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 1030 _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 1038 _ ........


SECTION $_pThreadMain align=1 noexecute                 ; section number 10, unknown type: 00000000
;  Communal section not supported by YASM

?_081:                                                  ; byte
        db 00H, 00H, 00H, 00H                           ; 0000 _ ....


SECTION $_pThread1 align=1 noexecute                    ; section number 11, unknown type: 00000000
;  Communal section not supported by YASM

?_082:                                                  ; byte
        db 00H, 00H, 00H, 00H                           ; 0000 _ ....


SECTION $_pThread2 align=1 noexecute                    ; section number 12, unknown type: 00000000
;  Communal section not supported by YASM

?_083:                                                  ; byte
        db 00H, 00H, 00H, 00H                           ; 0000 _ ....


SECTION $_pThread3 align=1 noexecute                    ; section number 13, unknown type: 00000000
;  Communal section not supported by YASM

?_084:                                                  ; byte
        db 00H, 00H, 00H, 00H                           ; 0000 _ ....


SECTION $_pThread4 align=1 noexecute                    ; section number 14, unknown type: 00000000
;  Communal section not supported by YASM

?_085:                                                  ; byte
        db 00H, 00H, 00H, 00H                           ; 0000 _ ....


SECTION $_pThread5 align=1 noexecute                    ; section number 15, unknown type: 00000000
;  Communal section not supported by YASM

?_086:                                                  ; byte
        db 00H, 00H, 00H, 00H                           ; 0000 _ ....


SECTION $_pThread6 align=1 noexecute                    ; section number 16, unknown type: 00000000
;  Communal section not supported by YASM

?_087:                                                  ; byte
        db 00H, 00H, 00H, 00H                           ; 0000 _ ....


SECTION $_mutex_a align=1 noexecute                     ; section number 17, unknown type: 00000000
;  Communal section not supported by YASM

        db 00H, 00H, 00H, 00H                           ; 0000 _ ....


